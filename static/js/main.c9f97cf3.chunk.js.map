{"version":3,"sources":["components/shared/Header/Header.tsx","components/shared/Header/HeaderInnerContent/HeaderInnerContent.tsx","components/shared/Wrapper/Wrapper.tsx","components/global/GlobalHeader/GlobalHeader.tsx","components/shared/utility/LoadingIcon/LoadingIcon.tsx","components/global/GlobalLoader/GlobalLoader.tsx","components/Articles/ArticlesList.tsx","apollo/requests/articles.requests.ts","components/views/Articles/Articles.view.tsx","apollo/requests/article.requests.ts","components/article/ArticleComments/ArticleComments.tsx","components/article/ArticleBody/ArticleBody.tsx","components/article/ArticleHeader/ArticleHeader.tsx","components/views/Articles/Article.view.tsx","components/views/NotFound/NotFound.view.tsx","router/router.tsx","App.tsx","apollo/index.ts","index.tsx"],"names":["Header","children","className","HeaderInnerContent","classes","clsx","Wrapper","headerComponent","defaultProps","LoadingIcon","GlobalLoader","ArticlesList","loading","data","newsList","totalRows","rows","fetchMore","loadMore","variables","skip","length","updateQuery","prev","fetchMoreResult","hasMore","loader","map","article","index","to","pathname","encodeURI","id","src","img","alt","title","GET_ARTICLES_LIST","gql","ArticlesView","useQuery","limit","error","console","GET_SINGLE_ARTICLE_INFO","ArticleComments","comments","comment","email","content","moment","createdDate","format","ArticleBody","newsItem","ArticleHeader","icon","faChevronLeft","href","url","target","rel","faExternalLinkAlt","ArticleView","match","useEffect","window","scrollTo","params","NotFoundView","AnimatedSwitch","withRouter","location","TransitionGroup","CSSTransition","classNames","timeout","exact","path","component","key","RootRouter","basename","process","App","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAMe,SAASA,EAAT,GAAoD,IAAlCC,EAAiC,EAAjCA,SAC/B,OAAO,qBAAKC,UAAU,SAAf,SAAyBD,I,YCCnB,SAASE,EAAT,GAGU,IAFvBF,EAEsB,EAFtBA,SACAG,EACsB,EADtBA,QAEA,OAAO,qBAAKF,UAAWG,YAAK,CAAC,kBAAmBD,IAAzC,SAAqDH,ICJ/C,SAASK,EAAT,GAGU,IAFvBL,EAEsB,EAFtBA,SACAM,EACsB,EADtBA,gBAEA,OACE,sBAAKL,UAAU,UAAf,UACGK,GAAmBA,EAAgB,IACpC,qBAAKL,UAAU,YAAf,SAA4BD,ODAlCE,EAAmBK,aAAe,CAChCJ,QAAS,ICIXE,EAAQE,aAAe,CACrBD,gBCjBa,WACb,OACE,cAACP,EAAD,UACE,cAACG,EAAD,UACE,qBAAKD,UAAU,4CAAf,SACE,qBAAKA,UAAU,gBAAf,iC,qCCPK,SAASO,IACtB,OAAO,qBAAKP,UAAU,WCAT,SAASQ,IACtB,OACE,qBAAKR,UAAU,UAAf,SACE,qBAAKA,UAAU,mEAAf,SACE,cAACO,EAAD,QCUO,SAASE,EAAT,GASiB,IAAD,IAR7BC,eAQ6B,aAP7BC,YAO6B,MAPtB,CACLC,SAAU,CACRC,UAAW,IACXC,KAAM,KAImB,MAD7BC,iBAC6B,MADjB,aACiB,EACrBH,EAAaD,EAAbC,SAuBR,OACE,qBAAKZ,UAAU,eAAf,SACIU,EAkCA,cAACF,EAAD,IAjCA,cAAC,IAAD,CACEQ,SAzBR,WACED,EAAU,CACRE,UAAW,CACTC,KAAMN,EAASE,KAAKK,QAEtBC,YAAa,SACXC,EADW,GAGP,IADFC,EACC,EADDA,gBAEF,OAAKA,EACE,2BACFD,GADL,IAEET,SAAS,2BACJS,EAAKT,UADF,IAENE,KAAK,GAAD,mBAAMO,EAAKT,SAASE,MAApB,YAA6BQ,EAAgBV,SAASE,WALjCO,MAiB3BE,UAAWX,EAASE,KAAKK,SAAWP,EAASC,WAC7CW,OAAQ,qBAAKxB,UAAU,oBAAf,SAAoCO,MAH9C,SAKE,qBAAKP,UAAU,SAAf,SACGY,EAASE,KAAKW,KACb,SAACC,EAAmBC,GAApB,OACE,qBAEE3B,UACY,IAAV2B,EACI,iCACA,+BALR,SAQE,eAAC,IAAD,CACE3B,UAAU,qBACV4B,GAAI,CACFC,SAAS,YAAD,OAAcC,UAAUJ,EAAQK,MAH5C,UAME,qBAAK/B,UAAU,oBAAf,SACE,qBAAKgC,IAAKN,EAAQO,IAAKC,IAAKR,EAAQS,UAEtC,oBAAInC,UAAU,sBAAd,SAAqC0B,EAAQS,YAhB1CT,EAAQK,aA8B/BtB,EAAaH,aAAe,CAC1BI,SAAS,EACTC,KAAM,CACJC,SAAU,CACRC,UAAW,IACXC,KAAM,KAGVC,UAAW,c,iRClGN,IAAMqB,EAAoBC,cAAH,KCIf,SAASC,IAA8B,IAAD,EACPC,mBAASH,EAAmB,CACtEnB,UAAW,CACTuB,MAAO,EACPtB,KAAM,KAHFR,EAD2C,EAC3CA,QAAS+B,EADkC,EAClCA,MAAO9B,EAD2B,EAC3BA,KAAMI,EADqB,EACrBA,UAW9B,OAJI0B,GACFC,QAAQD,MAAMA,GAId,cAACrC,EAAD,UACE,8BACE,cAACK,EAAD,CAAcC,QAASA,EAASC,KAAMA,EAAMI,UAAWA,Q,ySCnBxD,IAAM4B,EAA0BN,cAAH,K,QCMrB,SAASO,EAAT,GAA6D,IAAlCC,EAAiC,EAAjCA,SACxC,OACE,sBAAK7C,UAAU,WAAf,UACE,qBAAKA,UAAU,kBAAf,sBACA,qBAAKA,UAAU,iBAAf,SACG6C,EAASpB,KAAI,SAACqB,GAAD,OACZ,sBAAsB9C,UAAU,gBAAhC,UACE,qBAAKA,UAAU,+BAAf,SAA+C8C,EAAQC,QACvD,qBAAK/C,UAAU,gCAAf,SACG8C,EAAQE,UAEX,qBAAKhD,UAAU,gBAAf,SACGiD,OAAYH,EAAQI,YAAc,KAAMC,OAAO,kBAN1CL,EAAQf,YCLb,SAASqB,EAAT,GAA8D,IAAvC1C,EAAsC,EAAtCA,QAC5B2C,EADkE,EAA7B1C,KACrC0C,SACR,OACE,qBAAKrD,UAAU,iBAAf,SACGU,EACC,cAACF,EAAD,IAEA,qCACE,oBAAIR,UAAU,wBAAd,SAAuCqD,EAASlB,QAChD,qBAAKnC,UAAU,sBAAf,SACE,qBAAKgC,IAAKqB,EAASpB,IAAKC,IAAKmB,EAASlB,UAExC,qBAAKnC,UAAU,0BAAf,SAA0CqD,EAASL,UACnD,qBAAKhD,UAAU,iCAAf,SACE,cAAC4C,EAAD,CAAiBC,SAAUQ,EAASR,kBAQhDO,EAAY9C,aAAe,CACzBI,SAAS,EACTC,KAAM,CACJ0C,SAAU,K,oBCnBC,SAASC,EAAT,GAGU,IAFvB5C,EAEsB,EAFtBA,QAEsB,IADtBC,KAEQ0C,QADc,MADf,CAAEA,SAAU,IACG,GACdA,SAER,OACE,mCACI3C,EAcE,KAbF,cAACZ,EAAD,UACE,cAACG,EAAD,UACE,sBAAKD,UAAU,gBAAf,UACE,cAAC,IAAD,CAAM4B,GAAG,IAAT,SACE,cAAC,IAAD,CAAiB2B,KAAMC,QAEzB,qBAAKxD,UAAU,gBAAf,yBACA,mBAAGyD,KAAMJ,EAASK,IAAKC,OAAO,SAASC,IAAI,aAA3C,SACE,cAAC,IAAD,CAAiBL,KAAMM,iBClBxB,SAASC,EAAT,GAA2D,IAApCC,EAAmC,EAAnCA,MACpCC,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,IAHoE,MAKtC3B,mBAASI,EAAyB,CACjE1B,UAAW,CACTc,GAAIgC,EAAMI,OAAOpC,MAFbrB,EAL+D,EAK/DA,QAAS+B,EALsD,EAKtDA,MAAO9B,EAL+C,EAK/CA,KAUxB,OAJI8B,GACFC,QAAQD,MAAMA,GAId,cAACrC,EAAD,CACEC,gBAAiB,kBAAM,cAACiD,EAAD,CAAe5C,QAASA,EAASC,KAAMA,KADhE,SAGE,cAACyC,EAAD,CAAa1C,QAASA,EAASC,KAAMA,MC7B5B,SAASyD,IACtB,OACE,cAAChE,EAAD,UACE,sBAAKJ,UAAU,UAAf,UACE,qBAAKA,UAAU,iBAAf,iBACA,cAAC,IAAD,CAAMA,UAAU,gBAAgB4B,GAAG,IAAnC,0BFiCR0B,EAAchD,aAAe,CAC3BI,SAAS,EACTC,KAAM,CACJ0C,SAAU,KGtCd,IAAMgB,EAAiBC,aAAW,gBAAGC,EAAH,EAAGA,SAAH,OAChC,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAEEC,WAAW,oBACXC,QAAS,IAHX,SAKE,eAAC,IAAD,CAAQJ,SAAUA,EAAlB,UACE,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,IAAIC,UAAWxC,IACjC,cAAC,IAAD,CAAOuC,KAAK,eAAeC,UAAWhB,IACtC,cAAC,IAAD,CAAOgB,UAAWV,QAPfG,EAASQ,UAaL,SAASC,IACtB,OACE,cAAC,IAAD,CAAeC,SAAUC,qBAAzB,SACE,cAACb,EAAD,MCtBS,SAASc,IACtB,OACE,qBAAKnF,UAAU,MAAf,SACE,cAACgF,EAAD,MCLC,IAAMI,EAAS,IAAIC,eAAa,CACrCC,IAAK,gDACLC,MAAO,IAAIC,kBCEbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,iBAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.c9f97cf3.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\ninterface Props {\n  children: ReactElement;\n}\n\nexport default function Header({ children }: Props): ReactElement {\n  return <div className=\"header\">{children}</div>;\n}\n","import React, { ReactElement } from \"react\";\nimport clsx from \"clsx\";\n\ninterface Props {\n  children: ReactElement;\n  classes?: string;\n}\n\nexport default function HeaderInnerContent({\n  children,\n  classes,\n}: Props): ReactElement {\n  return <div className={clsx([\"header__content\", classes])}>{children}</div>;\n}\n\nHeaderInnerContent.defaultProps = {\n  classes: \"\",\n};\n","import React, { FunctionComponent, ReactElement } from \"react\";\nimport GlobalHeader from \"../../global/GlobalHeader/GlobalHeader\";\n\ninterface Props {\n  children: ReactElement;\n  headerComponent?: FunctionComponent;\n}\n\nexport default function Wrapper({\n  children,\n  headerComponent,\n}: Props): ReactElement {\n  return (\n    <div className=\"wrapper\">\n      {headerComponent && headerComponent({})}\n      <div className=\"container\">{children}</div>\n    </div>\n  );\n}\n\nWrapper.defaultProps = {\n  headerComponent: GlobalHeader,\n};\n","import React, { ReactElement } from \"react\";\nimport Header from \"../../shared/Header/Header\";\nimport HeaderInnerContent from \"../../shared/Header/HeaderInnerContent/HeaderInnerContent\";\n\nexport default function GlobalHeader(): ReactElement {\n  return (\n    <Header>\n      <HeaderInnerContent>\n        <div className=\"header__inner flex-justify-content-center\">\n          <div className=\"header__title\">News reader</div>\n        </div>\n      </HeaderInnerContent>\n    </Header>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\nexport default function LoadingIcon(): ReactElement {\n  return <div className=\"loader\" />;\n}\n","import React, { ReactElement } from \"react\";\nimport LoadingIcon from \"../../shared/utility/LoadingIcon/LoadingIcon\";\n\nexport default function GlobalLoader(): ReactElement {\n  return (\n    <div className=\"overlay\">\n      <div className=\"d-flex flex-align-items-center flex-justify-content-center h-100\">\n        <LoadingIcon />\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Link } from \"react-router-dom\";\nimport { IArticle } from \"../../interfaces/articles/article\";\nimport LoadingIcon from \"../shared/utility/LoadingIcon/LoadingIcon\";\nimport GlobalLoader from \"../global/GlobalLoader/GlobalLoader\";\nimport {\n  INewsList,\n  IRequestMoreResults,\n} from \"../../interfaces/articles/articles\";\n\ninterface Props {\n  loading?: boolean;\n  data?: INewsList;\n  fetchMore?: any;\n}\n\nexport default function ArticlesList({\n  loading = false,\n  data = {\n    newsList: {\n      totalRows: 999,\n      rows: [],\n    },\n  },\n  fetchMore = () => {},\n}: Props): ReactElement<Props> {\n  const { newsList } = data;\n\n  function requestMoreRows() {\n    fetchMore({\n      variables: {\n        skip: newsList.rows.length,\n      },\n      updateQuery: (\n        prev: INewsList,\n        { fetchMoreResult }: IRequestMoreResults\n      ) => {\n        if (!fetchMoreResult) return prev;\n        return {\n          ...prev,\n          newsList: {\n            ...prev.newsList,\n            rows: [...prev.newsList.rows, ...fetchMoreResult.newsList.rows],\n          },\n        };\n      },\n    });\n  }\n\n  return (\n    <div className=\"article-list\">\n      {!loading ? (\n        <InfiniteScroll\n          loadMore={requestMoreRows}\n          hasMore={!(newsList.rows.length === newsList.totalRows)}\n          loader={<div className=\"text-align-center\">{LoadingIcon()}</div>}\n        >\n          <div className=\"f-grid\">\n            {newsList.rows.map(\n              (article: IArticle, index: number): ReactElement => (\n                <div\n                  key={article.id}\n                  className={\n                    index === 0\n                      ? \"f-grid-col-12 f-grid-col-lg-12\"\n                      : \"f-grid-col-6 f-grid-col-lg-4\"\n                  }\n                >\n                  <Link\n                    className=\"article-list__item\"\n                    to={{\n                      pathname: `/article/${encodeURI(article.id)}`,\n                    }}\n                  >\n                    <div className=\"article-list__img\">\n                      <img src={article.img} alt={article.title} />\n                    </div>\n                    <h2 className=\"article-list__title\">{article.title}</h2>\n                  </Link>\n                </div>\n              )\n            )}\n          </div>\n        </InfiniteScroll>\n      ) : (\n        <GlobalLoader />\n      )}\n    </div>\n  );\n}\n\nArticlesList.defaultProps = {\n  loading: false,\n  data: {\n    newsList: {\n      totalRows: 999,\n      rows: [],\n    },\n  },\n  fetchMore: () => {},\n};\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ARTICLES_LIST = gql`\n  query getArticlesList($skip: Int!, $limit: Int!) {\n    newsList(skip: $skip, limit: $limit) {\n      totalRows\n      rows {\n        id\n        title\n        img\n      }\n    }\n  }\n`;\n","import React, { ReactElement } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Wrapper from \"../../shared/Wrapper/Wrapper\";\nimport ArticlesList from \"../../Articles/ArticlesList\";\nimport { GET_ARTICLES_LIST } from \"../../../apollo/requests/articles.requests\";\n\nexport default function ArticlesView(): ReactElement {\n  const { loading, error, data, fetchMore } = useQuery(GET_ARTICLES_LIST, {\n    variables: {\n      limit: 5,\n      skip: 0,\n    },\n  });\n\n  if (error) {\n    console.error(error);\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <ArticlesList loading={loading} data={data} fetchMore={fetchMore} />\n      </div>\n    </Wrapper>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const GET_SINGLE_ARTICLE_INFO = gql`\n  query getArticlesList($id: ID!) {\n    newsItem(id: $id) {\n      id\n      title\n      content\n      url\n      img\n      comments {\n        id\n        email\n        createdDate\n        content\n      }\n    }\n  }\n`;\n","import React, { ReactElement } from \"react\";\nimport * as moment from \"moment\";\nimport { IComment } from \"../../../interfaces/articles/article\";\n\ninterface Props {\n  comments: [];\n}\n\nexport default function ArticleComments({ comments }: Props): ReactElement {\n  return (\n    <div className=\"comments\">\n      <div className=\"comments__title\">Comments</div>\n      <div className=\"comments__list\">\n        {comments.map((comment: IComment) => (\n          <div key={comment.id} className=\"comment__item\">\n            <div className=\"comment__author mar-bottom-5\">{comment.email}</div>\n            <div className=\"comment__content mar-bottom-5\">\n              {comment.content}\n            </div>\n            <div className=\"comment__date\">\n              {moment.unix(comment.createdDate / 1000).format(\"DD.MM.YYYY\")}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport GlobalLoader from \"../../global/GlobalLoader/GlobalLoader\";\nimport ArticleComments from \"../ArticleComments/ArticleComments\";\n\ninterface Props {\n  loading?: boolean;\n  data?: any;\n}\n\nexport default function ArticleBody({ loading, data }: Props): ReactElement {\n  const { newsItem } = data;\n  return (\n    <div className=\"single-article\">\n      {loading ? (\n        <GlobalLoader />\n      ) : (\n        <>\n          <h1 className=\"single-article__title\">{newsItem.title}</h1>\n          <div className=\"single-article__img\">\n            <img src={newsItem.img} alt={newsItem.title} />\n          </div>\n          <div className=\"single-article__content\">{newsItem.content}</div>\n          <div className=\"single-article__comments clear\">\n            <ArticleComments comments={newsItem.comments} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nArticleBody.defaultProps = {\n  loading: false,\n  data: {\n    newsItem: {},\n  },\n};\n","import React, { ReactElement } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faExternalLinkAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../shared/Header/Header\";\nimport HeaderInnerContent from \"../../shared/Header/HeaderInnerContent/HeaderInnerContent\";\n\ninterface Props {\n  loading?: boolean;\n  data?: any;\n}\n\nexport default function ArticleHeader({\n  loading,\n  data = { newsItem: {} },\n}: Props): ReactElement {\n  const { newsItem } = data;\n\n  return (\n    <>\n      {!loading ? (\n        <Header>\n          <HeaderInnerContent>\n            <div className=\"header__inner\">\n              <Link to=\"/\">\n                <FontAwesomeIcon icon={faChevronLeft} />\n              </Link>\n              <div className=\"header__title\">News reader</div>\n              <a href={newsItem.url} target=\"_blank\" rel=\"noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} />\n              </a>\n            </div>\n          </HeaderInnerContent>\n        </Header>\n      ) : null}\n    </>\n  );\n}\n\nArticleHeader.defaultProps = {\n  loading: false,\n  data: {\n    newsItem: {},\n  },\n};\n","import React, { ReactElement, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport Wrapper from \"../../shared/Wrapper/Wrapper\";\nimport { GET_SINGLE_ARTICLE_INFO } from \"../../../apollo/requests/article.requests\";\nimport ArticleBody from \"../../article/ArticleBody/ArticleBody\";\nimport ArticleHeader from \"../../article/ArticleHeader/ArticleHeader\";\n\ninterface MatchParams {\n  id: string;\n}\n\ntype MatchProps = RouteComponentProps<MatchParams>;\n\nexport default function ArticleView({ match }: MatchProps): ReactElement {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const { loading, error, data } = useQuery(GET_SINGLE_ARTICLE_INFO, {\n    variables: {\n      id: match.params.id,\n    },\n  });\n\n  if (error) {\n    console.error(error);\n  }\n\n  return (\n    <Wrapper\n      headerComponent={() => <ArticleHeader loading={loading} data={data} />}\n    >\n      <ArticleBody loading={loading} data={data} />\n    </Wrapper>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Wrapper from \"../../shared/Wrapper/Wrapper\";\n\nexport default function NotFoundView(): ReactElement {\n  return (\n    <Wrapper>\n      <div className=\"mistake\">\n        <div className=\"mistake__error\">404</div>\n        <Link className=\"mistake__link\" to=\"/\">\n          Go home\n        </Link>\n      </div>\n    </Wrapper>\n  );\n}\n","import { BrowserRouter, Route, Switch, withRouter } from \"react-router-dom\";\nimport React, { ReactElement } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ArticlesView from \"../components/views/Articles/Articles.view\";\nimport ArticleView from \"../components/views/Articles/Article.view\";\nimport NotFoundView from \"../components/views/NotFound/NotFound.view\";\n\nconst AnimatedSwitch = withRouter(({ location }) => (\n  <TransitionGroup>\n    <CSSTransition\n      key={location.key}\n      classNames=\"slide-righttoleft\"\n      timeout={500}\n    >\n      <Switch location={location}>\n        <Route exact path=\"/\" component={ArticlesView} />\n        <Route path=\"/article/:id\" component={ArticleView} />\n        <Route component={NotFoundView} />\n      </Switch>\n    </CSSTransition>\n  </TransitionGroup>\n));\n\nexport default function RootRouter(): ReactElement {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <AnimatedSwitch />\n    </BrowserRouter>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport \"./App.scss\";\nimport RootRouter from \"./router/router\";\n\nexport default function App(): ReactElement {\n  return (\n    <div className=\"App\">\n      <RootRouter />\n    </div>\n  );\n}\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nexport const client = new ApolloClient({\n  uri: \"https://news-reader.stagnationlab.dev/graphql\",\n  cache: new InMemoryCache(),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport App from \"./App\";\nimport { client } from \"./apollo\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}